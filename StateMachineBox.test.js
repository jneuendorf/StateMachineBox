// Generated by CoffeeScript 1.9.3
(function() {
  var indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  describe("StateMachineBox", function() {
    return it("should work", function() {
      var dateFormatOptions, dateFormats, format, formatOptions, formats, options, popup, popupStateMachine, renderOptions, startOptions, titleOptions;
      renderOptions = {
        title: false,
        format: "",
        dateFormat: null
      };
      formats = ["png", "csv"];
      formatOptions = $("<div>Exportformat wählen:</div>\n" + (((function() {
        var i, len, results;
        results = [];
        for (i = 0, len = formats.length; i < len; i++) {
          format = formats[i];
          results.push("<div class=\"formatOption\">" + (format.toUpperCase()) + "</div>");
        }
        return results;
      })()).join("\n")));
      formatOptions.filter(".formatOption").eq(0).click(function() {
        var elem;
        elem = $(this);
        renderOptions.format = formats[0];
        popup.fireEvent("png");
        return true;
      });
      formatOptions.filter(".formatOption").eq(1).click(function() {
        var elem;
        elem = $(this);
        renderOptions.format = formats[1];
        popup.fireEvent("csv");
        return true;
      });
      options = [true, false];
      titleOptions = $("<div>Sollen Titel und Untertitel mit exportiert werden?<br />\n(Falls beide leer sind, wird diese Einstellung ignoriert)</div>\n<div class=\"titleOption\">Ja</div>\n<div class=\"titleOption selected\">Nein</div>");
      titleOptions.filter(".titleOption").each(function(idx, elem) {
        elem = $(elem);
        return elem.click(function() {
          renderOptions.title = options[idx];
          popup.fireEvent("exportTitleOptionChosen");
          return true;
        });
      });
      dateFormats = ["auto"];
      dateFormatOptions = $("<div>Datumsformat wählen:</div>\n<div class=\"dateFormatOption selected\">AUTO</div>\n<div class=\"dateFormatLabel\">\n    <span class=\"hidden\">Beispiel:</span>\n    <span>abhängig vom Zeitintervall im Favoriten</span>\n</div>\n<div class=\"dateFormat ok\">OK</div>");
      dateFormatOptions.filter(".dateFormatOption").each(function(idx, elem) {
        elem = $(elem);
        return elem.click(function() {
          return true;
        });
      });
      dateFormatOptions.filter(".ok").click(function() {
        popup.fireEvent("formatChosen");
        return true;
      });
      startOptions = $("<div>Export starten?</div>\n<div class=\"startOption\">OK</div>\n<div class=\"startOption\">Abbrechen</div>");
      startOptions.filter(".startOption").eq(0).click(function() {
        return popup.close();
      });
      startOptions.filter(".startOption").eq(1).click(function() {
        return popup.fireAction("cancel");
      });
      popupStateMachine = {
        events: [
          {
            name: "init",
            from: "none",
            to: "chooseExportFormat",
            content: formatOptions
          }, {
            name: "png",
            from: "chooseExportFormat",
            to: "chooseExportTitle",
            content: titleOptions
          }, {
            name: "csv",
            from: "chooseExportFormat",
            to: "chooseDateFormat",
            content: dateFormatOptions
          }, {
            name: "back",
            from: "chooseExportFormat",
            to: "chooseExportFormat"
          }, {
            name: "exportTitleOptionChosen",
            from: "chooseExportTitle",
            to: "chooseStartPNGExport",
            content: startOptions
          }, {
            name: "back",
            from: "chooseExportTitle",
            to: "chooseExportFormat"
          }, {
            name: "formatChosen",
            from: "chooseDateFormat",
            to: "chooseStartCSVExport",
            content: startOptions
          }, {
            name: "back",
            from: "chooseDateFormat",
            to: "chooseExportFormat"
          }, {
            name: "true",
            from: "chooseStartPNGExport",
            to: "close"
          }, {
            name: "false",
            from: "chooseStartPNGExport",
            to: "cancel"
          }, {
            name: "back",
            from: "chooseStartPNGExport",
            to: "chooseExportTitle"
          }, {
            name: "true",
            from: "chooseStartCSVExport",
            to: "close"
          }, {
            name: "false",
            from: "chooseStartCSVExport",
            to: "cancel"
          }, {
            name: "back",
            from: "chooseStartCSVExport",
            to: "chooseDateFormat"
          }
        ]
      };
      popup = new StateMachineBox(popupStateMachine, "Exporteinstellungen", {
        buttons: ["cancel", "next", "prev"],
        closeButtonAction: "cancel",
        width: "500px",
        height: "350px",
        onClose: function() {
          return startRendering(favIds, renderOptions, folderName);
        },
        onFailure: function(event) {
          var content, currentState, orgColor, ref;
          currentState = this.current;
          if (event === "next") {
            if (currentState === "chooseExportFormat") {
              if (ref = renderOptions.format, indexOf.call(formats, ref) < 0) {
                content = popup.currentContent();
                orgColor = content.eq(0).css("color");
              } else {
                popup.fireEvent(renderOptions.format);
              }
              return false;
            }
            if (currentState === "chooseStartPNGExport" || currentState === "chooseStartCSVExport") {
              popup.close();
              return false;
            }
          }
          return true;
        }
      });
      popup.draw();
      return expect(true).toBe(true);
    });
  });

}).call(this);
